{"ast":null,"code":"/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;","map":{"version":3,"sources":["/home/theodor/Downloads/FUNiXReactJSASM-RJS101x_Assignment4_hungnpfx13297-funix.edu.vn /FUNiXReactJSASM-RJS101x_Assignment4_hungnpfx13297-funix.edu.vn/node_modules/lodash-es/_overArg.js"],"names":["overArg","func","transform","arg"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,SAAvB,EAAkC;AAChC,SAAO,UAASC,GAAT,EAAc;AACnB,WAAOF,IAAI,CAACC,SAAS,CAACC,GAAD,CAAV,CAAX;AACD,GAFD;AAGD;;AAED,eAAeH,OAAf","sourcesContent":["/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n"]},"metadata":{},"sourceType":"module"}