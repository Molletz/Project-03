{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\"; // Post New Staff\n\nexport const addNewStaff = staffs => ({\n  type: ActionTypes.ADD_NEWSTAFF,\n  payload: staffs\n});\nexport const postNewStaff = newStaff => dispatch => {\n  return fetch(baseUrl + \"staffs\", {\n    method: \"POST\",\n    body: JSON.stringify(newStaff),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(response => dispatch(addNewStaff(response))).catch(error => {\n    console.log(\"Submit new staff: \", error.message);\n    alert(\"Your submit could not be done\\nError: \" + error.message);\n  });\n}; // Patch Staff Info\n\nexport const updatedStaffs = staffs => ({\n  type: ActionTypes.UPDATED_STAFFS,\n  payload: staffs\n});\nexport const patchStaffInfo = infoStaff => dispatch => {\n  console.log(infoStaff);\n  return fetch(baseUrl + \"staffs\", {\n    method: \"PATCH\",\n    body: JSON.stringify(infoStaff),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(response => dispatch(updatedStaffs(response))).catch(error => {\n    console.log(\"Updating staffs: \", error.message);\n    alert(\"Your change could not be done\\nError: \" + error.message);\n  });\n}; // Delete Staff\n\nexport const deletedStaffs = staffs => ({\n  type: ActionTypes.DELETED_STAFFS,\n  payload: staffs\n});\nexport const deleteStaff = id => dispatch => {\n  debugger;\n  return fetch(baseUrl + `staffs/${id}`, {\n    method: \"DELETE\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(response => dispatch(deletedStaffs(response))).catch(error => {\n    console.log(\"Delete staff: \", error.message);\n    alert(\"You could not delete\\nError: \" + error.message);\n  });\n}; // Fetch Staffs\n\nexport const fetchStaffs = () => dispatch => {\n  dispatch(staffsLoading(true));\n  return fetch(baseUrl + \"staffs\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(reponse => reponse.json()).then(staffs => dispatch(staffsRender(staffs))).catch(error => dispatch(staffsFailed(error.message)));\n};\nexport const staffsLoading = () => ({\n  type: ActionTypes.STAFFS_LOADING\n});\nexport const staffsFailed = errmess => ({\n  type: ActionTypes.STAFFS_FAILED,\n  payload: errmess\n});\nexport const staffsRender = staffs => ({\n  type: ActionTypes.STAFFS_RENDER,\n  payload: staffs\n}); // Fetch Departments\n\nexport const fetchDepartments = () => dispatch => {\n  dispatch(deptsLoading(true));\n  return fetch(baseUrl + \"departments\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(reponse => reponse.json()).then(depts => dispatch(deptsRender(depts))).catch(error => dispatch(deptsFailed(error.message)));\n};\nexport const deptsLoading = () => ({\n  type: ActionTypes.DEPARTMENTS_LOADING\n});\nexport const deptsFailed = errmess => ({\n  type: ActionTypes.DEPARTMENTS_FAILED,\n  payload: errmess\n});\nexport const deptsRender = depts => ({\n  type: ActionTypes.DEPARTMENTS_RENDER,\n  payload: depts\n}); // Fetch Salary\n\nexport const fetchStaffSalary = () => dispatch => {\n  dispatch(salaryLoading(true));\n  return fetch(baseUrl + \"staffsSalary\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(reponse => reponse.json()).then(salary => dispatch(salaryRender(salary))).catch(error => dispatch(salaryFailed(error.message)));\n};\nexport const salaryLoading = () => ({\n  type: ActionTypes.STAFFSALARY_LOADING\n});\nexport const salaryFailed = errmess => ({\n  type: ActionTypes.STAFFSALARY_FAILED,\n  payload: errmess\n});\nexport const salaryRender = salary => ({\n  type: ActionTypes.STAFFSALARY_RENDER,\n  payload: salary\n});","map":{"version":3,"sources":["/home/theodor/Downloads/FUNiXReactJSASM-RJS101x_Assignment4_hungnpfx13297-funix.edu.vn /FUNiXReactJSASM-RJS101x_Assignment4_hungnpfx13297-funix.edu.vn/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addNewStaff","staffs","type","ADD_NEWSTAFF","payload","postNewStaff","newStaff","dispatch","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","errmess","message","json","catch","console","log","alert","updatedStaffs","UPDATED_STAFFS","patchStaffInfo","infoStaff","deletedStaffs","DELETED_STAFFS","deleteStaff","id","fetchStaffs","staffsLoading","reponse","staffsRender","staffsFailed","STAFFS_LOADING","STAFFS_FAILED","STAFFS_RENDER","fetchDepartments","deptsLoading","depts","deptsRender","deptsFailed","DEPARTMENTS_LOADING","DEPARTMENTS_FAILED","DEPARTMENTS_RENDER","fetchStaffSalary","salaryLoading","salary","salaryRender","salaryFailed","STAFFSALARY_LOADING","STAFFSALARY_FAILED","STAFFSALARY_RENDER"],"mappings":"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","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\n// Post New Staff\nexport const addNewStaff = (staffs) => ({\n  type: ActionTypes.ADD_NEWSTAFF,\n  payload: staffs,\n});\n\nexport const postNewStaff = (newStaff) => (dispatch) => {\n  return fetch(baseUrl + \"staffs\", {\n    method: \"POST\",\n    body: JSON.stringify(newStaff),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"same-origin\",\n  })\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((response) => dispatch(addNewStaff(response)))\n    .catch((error) => {\n      console.log(\"Submit new staff: \", error.message);\n      alert(\"Your submit could not be done\\nError: \" + error.message);\n    });\n};\n\n// Patch Staff Info\nexport const updatedStaffs = (staffs) => ({\n  type: ActionTypes.UPDATED_STAFFS,\n  payload: staffs,\n});\n\nexport const patchStaffInfo = (infoStaff) => (dispatch) => {\n  console.log(infoStaff);\n  return fetch(baseUrl + \"staffs\", {\n    method: \"PATCH\",\n    body: JSON.stringify(infoStaff),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"same-origin\",\n  })\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((response) => dispatch(updatedStaffs(response)))\n    .catch((error) => {\n      console.log(\"Updating staffs: \", error.message);\n      alert(\"Your change could not be done\\nError: \" + error.message);\n    });\n};\n\n// Delete Staff\nexport const deletedStaffs = (staffs) => ({\n  type: ActionTypes.DELETED_STAFFS,\n  payload: staffs,\n});\n\nexport const deleteStaff = (id) => (dispatch) => {\n  debugger;\n  return fetch(baseUrl + `staffs/${id}`, {\n    method: \"DELETE\",\n  })\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((response) => dispatch(deletedStaffs(response)))\n    .catch((error) => {\n      console.log(\"Delete staff: \", error.message);\n      alert(\"You could not delete\\nError: \" + error.message);\n    });\n};\n\n// Fetch Staffs\nexport const fetchStaffs = () => (dispatch) => {\n  dispatch(staffsLoading(true));\n\n  return fetch(baseUrl + \"staffs\")\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((reponse) => reponse.json())\n    .then((staffs) => dispatch(staffsRender(staffs)))\n    .catch((error) => dispatch(staffsFailed(error.message)));\n};\n\nexport const staffsLoading = () => ({\n  type: ActionTypes.STAFFS_LOADING,\n});\n\nexport const staffsFailed = (errmess) => ({\n  type: ActionTypes.STAFFS_FAILED,\n  payload: errmess,\n});\n\nexport const staffsRender = (staffs) => ({\n  type: ActionTypes.STAFFS_RENDER,\n  payload: staffs,\n});\n\n// Fetch Departments\nexport const fetchDepartments = () => (dispatch) => {\n  dispatch(deptsLoading(true));\n\n  return fetch(baseUrl + \"departments\")\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((reponse) => reponse.json())\n    .then((depts) => dispatch(deptsRender(depts)))\n    .catch((error) => dispatch(deptsFailed(error.message)));\n};\n\nexport const deptsLoading = () => ({\n  type: ActionTypes.DEPARTMENTS_LOADING,\n});\n\nexport const deptsFailed = (errmess) => ({\n  type: ActionTypes.DEPARTMENTS_FAILED,\n  payload: errmess,\n});\n\nexport const deptsRender = (depts) => ({\n  type: ActionTypes.DEPARTMENTS_RENDER,\n  payload: depts,\n});\n\n// Fetch Salary\nexport const fetchStaffSalary = () => (dispatch) => {\n  dispatch(salaryLoading(true));\n\n  return fetch(baseUrl + \"staffsSalary\")\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((reponse) => reponse.json())\n    .then((salary) => dispatch(salaryRender(salary)))\n    .catch((error) => dispatch(salaryFailed(error.message)));\n};\n\nexport const salaryLoading = () => ({\n  type: ActionTypes.STAFFSALARY_LOADING,\n});\n\nexport const salaryFailed = (errmess) => ({\n  type: ActionTypes.STAFFSALARY_FAILED,\n  payload: errmess,\n});\n\nexport const salaryRender = (salary) => ({\n  type: ActionTypes.STAFFSALARY_RENDER,\n  payload: salary,\n});\n"]},"metadata":{},"sourceType":"module"}